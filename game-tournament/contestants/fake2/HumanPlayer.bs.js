// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var Connect4$Game = require("./Connect4.bs.js");

function HumanPlayer(MyGame) {
  var getInputJSLine = (
      function() {
        const readlineSync = require('readline-sync');
        const rl = readlineSync;
        var ans = rl.question('What move do you want to make? ');
        return ans;
    });
  var nextMove = function (s) {
    var myMove = List.nth(Curry._1(MyGame[/* legalMoves */4], s), 0);
    var input = Curry._1(getInputJSLine, /* () */0);
    if (input === "exit") {
      Pervasives.failwith("Exiting Game REPL");
    } else {
      var mov;
      try {
        mov = Curry._1(MyGame[/* moveOfString */7], input);
      }
      catch (exn){
        console.log("not a valid move");
        mov = nextMove(s);
      }
      if (List.mem(myMove, Curry._1(MyGame[/* legalMoves */4], s))) {
        myMove = mov;
      } else {
        console.log("Illegal move.");
        myMove = nextMove(s);
      }
    }
    return myMove;
  };
  return /* module */[
          /* PlayerGame */MyGame,
          /* getInputJSLine */getInputJSLine,
          /* nextMove */nextMove
        ];
}

var MyGame_000 = Connect4$Game.Connect4[5];

var MyGame_001 = Connect4$Game.Connect4[6];

var MyGame_002 = Connect4$Game.Connect4[7];

var MyGame_003 = Connect4$Game.Connect4[9];

var MyGame_004 = Connect4$Game.Connect4[10];

var MyGame_005 = Connect4$Game.Connect4[11];

var MyGame_006 = Connect4$Game.Connect4[15];

var MyGame_007 = Connect4$Game.Connect4[8];

var MyGame_008 = Connect4$Game.Connect4[16];

var MyGame = [
  MyGame_000,
  MyGame_001,
  MyGame_002,
  MyGame_003,
  MyGame_004,
  MyGame_005,
  MyGame_006,
  MyGame_007,
  MyGame_008
];

var getInputJSLine = (
      function() {
        const readlineSync = require('readline-sync');
        const rl = readlineSync;
        var ans = rl.question('What move do you want to make? ');
        return ans;
    });

function nextMove(s) {
  var myMove = List.nth(Curry._1(MyGame_004, s), 0);
  var input = Curry._1(getInputJSLine, /* () */0);
  if (input === "exit") {
    Pervasives.failwith("Exiting Game REPL");
  } else {
    var mov;
    try {
      mov = Curry._1(MyGame_007, input);
    }
    catch (exn){
      console.log("not a valid move");
      mov = nextMove(s);
    }
    if (List.mem(myMove, Curry._1(MyGame_004, s))) {
      myMove = mov;
    } else {
      console.log("Illegal move.");
      myMove = nextMove(s);
    }
  }
  return myMove;
}

var TestHumanPlayer = /* module */[
  /* PlayerGame */MyGame,
  /* getInputJSLine */getInputJSLine,
  /* nextMove */nextMove
];

var TestGame = 0;

exports.HumanPlayer = HumanPlayer;
exports.TestGame = TestGame;
exports.TestHumanPlayer = TestHumanPlayer;
/* getInputJSLine Not a pure module */
